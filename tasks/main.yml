---
- name: "Install GCloud Main"
  become: true
  become_user: root
  block:
  #
  # download
  #

    - name: "Remove old key"
      ansible.builtin.file:
        name: "{{ gcloud_keyring_file }}"
        state: absent
    - name: Download the Keyring
      ansible.builtin.get_url:
        url: "{{ gcloud_keyring_url }}"
        dest: "{{ gcloud_keyring_tmp_file }}"
        force: true
        mode: "0644"
    - name: DeArmor the Keyring
      ansible.builtin.shell: "gpg --yes --batch --dearmor -o {{ gcloud_keyring_file }} {{ gcloud_keyring_tmp_file }}"
    - name: Somerepo | apt source
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main"
        filename: "google-cloud-sdk"
        state: present
    - name: Install the Google Cloud SDK
      ansible.builtin.apt:
        name: google-cloud-cli
        state: present
        update_cache: true
        cache_valid_time: 84600
        force_apt_get: true
- name: "config cloud auth "
  become: true
  become_user: "{{ local_ssh_user }}"
  block:
    - name: "Add gcloud config"
      ansible.builtin.file:
        name: "/home/njl/.config/gcloud/"
        state: directory
        mode: "0700"
    - name: Copy the archive from the Ansible controller
      ansible.builtin.copy:
        src: "{{ gcloud_credentials }}"
        dest: "/home/njl/.config/gcloud/{{ gcloud_credentials }}"
        mode: "0600"
    - name: Authenticate with Google Cloud
      ansible.builtin.shell:
        cmd: "gcloud auth login --cred-file=/home/njl/.config/gcloud/{{ gcloud_credentials }}"
      register: gcloud_auth_status
    - name: Check the authentication status
      ansible.builtin.debug:
        msg: "{{ gcloud_auth_status.stdout }}"
    - name: Set the default project
      ansible.builtin.shell:
        cmd: "gcloud config set project {{ gcloud_project }}"
      register: gcloud_project_status
      
